# Wizard/.github/workflows/code_security.yml

name: CI - Security Scan & Code Quality

# CRITICAL FIX: Add explicit permissions for the GITHUB_TOKEN to write security results
# This fixes the "Resource not accessible by integration" error encountered during scans.
permissions:
  contents: read
  packages: read
  # REQUIRED for uploading security results (SARIF files)
  security-events: write 
  actions: read # Needed for job status updates

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The checks will run against the commit on the base branch, not the pull request head.
    branches: [ "main" ]

jobs:
  code_security:
    name: Security and Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # --- 1. Python Security (Bandit) and Quality (Lint) Check ---
    - name: Run Python Security and Lint
      # We use a Docker container to ensure a consistent environment for Poetry, Black, and Flake8
      run: |
        # Install Python dependencies (including dev deps like Black, Flake8)
        docker run --rm \
          -v ${{ github.workspace }}:/app \
          -w /app python:3.11-slim sh -c "
            pip install poetry bandit &&
            poetry install --only dev && 
            
            echo '--- Running Python Security Scan (Bandit) ---' &&
            # Bandit scan (runs on the 'python' directory)
            bandit -r python -x python/tests -f sarif -o bandit-results.sarif || true
            
            echo '--- Running Python Lint Checks (Black/Flake8) ---' &&
            # Execute the Dockerized lint script we defined locally
            /app/scripts/lint.sh
          "

    # --- 2. Go Static Analysis (Go Vet, Staticcheck) ---
    - name: Run Go Static Analysis
      # Use a dedicated Go container for analysis
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/go:/app/go \
          -w /app \
          golang:1.21 sh -c "
            go install honnef.co/go/tools/cmd/staticcheck@latest &&
            go vet go/... &&
            staticcheck go/...
          "
      # We allow failure here if the lint.sh script handles Go checks (for redundancy)
      continue-on-error: true 

    # --- 3. Upload Security Scan Results to GitHub ---
    # Bandit results are output in SARIF format. Upload them for display in the Security tab.
    - name: Upload Bandit SARIF results
      uses: github/codeql-action/upload-sarif@v3
      # Only upload if the SARIF file exists (i.e., Bandit ran successfully)
      if: always() && fileExists('bandit-results.sarif')
      with:
        sarif_file: bandit-results.sarif
